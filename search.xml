<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>hello-Hexo</title>
      <link href="/2018/12/07/hello-Hexo/"/>
      <url>/2018/12/07/hello-Hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SMARTY模板技术基本概念"><a href="#1-SMARTY模板技术基本概念" class="headerlink" title="1. SMARTY模板技术基本概念"></a>1. SMARTY模板技术基本概念</h2><h3 id="为什么使用SMARTY模板技术"><a href="#为什么使用SMARTY模板技术" class="headerlink" title="为什么使用SMARTY模板技术"></a>为什么使用SMARTY模板技术</h3><p>在web项目开发中，程序通常可以分为html模板页面和php程序页面，理想状态下，前端开发者负责编写html模板页面；而后台开发者负责编写php功能程序页面；</p><pre class=" language-mermaid"><code class="language-mermaid">graph LRA(前端开发) -->B(负责编写html页面和效果)C(后台开发) -->D(负责编写功能程序代码)</code></pre><p>但是，由于长期以来人们为了追求开发的便利性，经常是将html代码与php程序代码混合编写，这样的方式其实并不利于分工合作。</p><p>比如当我需要对现有页面进行改版，前端人员由于不懂PHP程序，只能先写好HTML页面模板，再交给后台开发人员重复一次以前嵌套PHP程序的工作。</p><p>而SMARTY模板技术，却很好的==将前端html代码==与==程序PHP代码==进行的==分离==，让前端开发者可以专心于开发前端的代码，而不必理会PHP程序；同时也让PHP程序开发者能够专注于PHP代码的构建，而不必为将数据嵌套进前端页面而烦恼。</p><h3 id="什么是SMARTY模板技术"><a href="#什么是SMARTY模板技术" class="headerlink" title="什么是SMARTY模板技术"></a>什么是SMARTY模板技术</h3><p>SMARTY模板技术是众多模板技术中的一种，而模板技术是一种将HTML代码和PHP代码强制分离的模板机制，它通过了某种方式让HTML代码与PHP代码在一起编写的过程中实现了强制分离。</p><p>所以SMARTY模板技术也就是：<strong>一种将HTML代码和PHP代码强制分离的模板机制。</strong></p><h3 id="SMARTY模板技术的特点"><a href="#SMARTY模板技术的特点" class="headerlink" title="SMARTY模板技术的特点"></a>SMARTY模板技术的特点</h3><p>SMARTY模板技术的主要特点：</p><blockquote><ol><li>smarty是一个基于==PHP开发==的PHP模板引擎，由于采用PHP编写，所以语法结构与PHP基本类似，语句比较自由；</li><li>相对其他的模板引擎，具有更快的响应速度（速度快）；</li><li>Smarty插件非常灵活，可以任意的扩展；</li><li>也有==不适合使用Smarty的地方==，比如一些需要==实时更新==的项目（股票的走势），因为Smarty把数据都缓存起来了，没法实时更新！</li></ol></blockquote><p>各框架和开源系统模板引擎使用一览：</p><blockquote><p>ThinkPHP框架（引入了模板引擎技术）</p><p>CI、YII（引入了模板引擎技术）</p><p>DEDECMS（引入了模板引擎技术）</p><p>ECSHOP（引入了模板引擎技术，使用的就是smarty模板引擎）</p></blockquote><h3 id="SMARTY模板技术实现的基本原理"><a href="#SMARTY模板技术实现的基本原理" class="headerlink" title="SMARTY模板技术实现的基本原理"></a>SMARTY模板技术实现的基本原理</h3><p><strong>==需求==</strong>：封装一个名为smarty1的类，实现通过该类展示模板页面并输出数据到页面的效果。</p><p><strong>==解答==</strong>：</p><p>构建名为Smarty1.class.php的程序文件，代码如下：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$title</span> <span class="token operator">=</span> <span class="token string">'劝学'</span><span class="token punctuation">;</span><span class="token variable">$auth</span> <span class="token operator">=</span> <span class="token string">'荀子'</span><span class="token punctuation">;</span><span class="token variable">$date</span> <span class="token operator">=</span> <span class="token string">'约公元前313年－公元前238年'</span><span class="token punctuation">;</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string">'故不积跬步，无以至千里；不积小流，无以成江海。骐骥一跃，不能十步；驽马十驾，功在不舍。锲而舍之，朽木不折；锲而不舍，金石可镂。'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Smarty1</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$_data</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">assign1</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//                  title    劝学</span>        <span class="token comment" spellcheck="true">//                  auth   荀子</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_data</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$v</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">display1</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//                                               ./index.html</span>        <span class="token variable">$fileContent</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//读取模板文件的内容</span>        <span class="token comment" spellcheck="true">//print_r($this->_data);</span>        <span class="token comment" spellcheck="true">//替换模板文件中的占位符</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_data</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$v</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token comment" spellcheck="true">//            {$   title  }</span>            <span class="token comment" spellcheck="true">//            {$   auth }</span>            <span class="token comment" spellcheck="true">//            {$   date }</span>            <span class="token comment" spellcheck="true">//            {$   content }</span>            <span class="token variable">$target</span> <span class="token operator">=</span> <span class="token string">'{$'</span><span class="token punctuation">.</span><span class="token variable">$k</span><span class="token punctuation">.</span><span class="token string">'}'</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//                                   {$title}    劝学</span>            <span class="token comment" spellcheck="true">//                                   {$auth}    荀子</span>            <span class="token comment" spellcheck="true">//                                   {$date}    约公元前313年－公元前238年</span>            <span class="token variable">$fileContent</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token variable">$target</span><span class="token punctuation">,</span> <span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token variable">$fileContent</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//$fileContent = str_replace('{$title}', $this->_data['title'], $fileContent);</span>        <span class="token comment" spellcheck="true">//$fileContent = str_replace('{$auth}', $this->_data['auth'], $fileContent);</span>        <span class="token comment" spellcheck="true">//$fileContent = str_replace('{$date}', $this->_data['date'], $fileContent);</span>        <span class="token comment" spellcheck="true">//$fileContent = str_replace('{$content}', $this->_data['content'], $fileContent);</span>        <span class="token comment" spellcheck="true">//输出替换后的模板内容</span>        <span class="token keyword">echo</span> <span class="token variable">$fileContent</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$smarty1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Smarty1</span><span class="token punctuation">;</span><span class="token variable">$smarty1</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assign1</span><span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">,</span> <span class="token variable">$title</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$smarty1</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assign1</span><span class="token punctuation">(</span><span class="token string">'auth'</span><span class="token punctuation">,</span> <span class="token variable">$auth</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$smarty1</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assign1</span><span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">,</span> <span class="token variable">$date</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$smarty1</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">assign1</span><span class="token punctuation">(</span><span class="token string">'content'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$smarty1</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">display1</span><span class="token punctuation">(</span><span class="token string">'./index.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//include './index.html';</span></code></pre><p>涉及到的模板文件day21/code/t/index.html和index_bak.html</p><p><strong>==小结==</strong>：模板技术实现的原理即：==读取==、==替换==、==输出==。</p><h2 id="2-SMARTY部署"><a href="#2-SMARTY部署" class="headerlink" title="2. SMARTY部署"></a>2. SMARTY部署</h2><p>SMARTY并不是PHP本身就自带的，在使用之前，需要先进行部署。</p><p><strong>==步骤==</strong>：</p><p>第一步，首先下载SMARTY，<a href="http://www.smarty.net，然后解压压缩包，" target="_blank" rel="noopener">www.smarty.net，然后解压压缩包，</a></p><p><img src="/2018/12/07/hello-Hexo/E:/itcast\King_blog\source\_posts\images\1545353113502.png" alt="1545353113502"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/12/07/hello-world/"/>
      <url>/2018/12/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>hello</title>
      <link href="/2017/12/09/hello/"/>
      <url>/2017/12/09/hello/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
  
  
</search>
